{"version":3,"sources":["componentes/Error.js","componentes/Pregunta.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","Helpers.js","componentes/ControlPresupuesto.js","App.js","index.js"],"names":["Error","mensaje","className","Pregunta","props","guardarPresupuesto","guardarPreguntaPresu","guardarRestante","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombreGasto","guardarNombreGasto","cantidadGasto","guardarCantidadGasto","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","preguntaPresupuesto","crearGasto","guardarGastos","useEffect","listadoGastos","presupuestoRestante","ReactDOM","render","document","getElementById"],"mappings":"uNAQeA,EAND,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAEV,yBAAKC,UAAU,2CAA4CD,IC2DhDE,MA5Df,SAAkBC,GAAM,IAGbC,EAA8DD,EAA9DC,mBAAqBC,EAAyCF,EAAzCE,qBAAsBC,EAAmBH,EAAnBG,gBAH9B,EAMgBC,mBAAS,GANzB,mBAMbC,EANa,KAMHC,EANG,OAOUF,oBAAS,GAPnB,mBAObG,EAPa,KAONC,EAPM,KAgCpB,OAEA,kBAAC,WAAD,KACI,uBAAGV,UAAU,+BAAb,6BACCS,EAAQ,kBAAC,EAAD,CAAOV,QAAQ,iCAAmC,KAC3D,0BACIY,SA3BmB,SAACC,GACxBA,EAAEC,iBAGCN,GAAY,GAAKO,MAAMP,GACtBG,GAAa,IAKjBA,GAAa,GAEbL,EAAgBE,GAEhBJ,EAAmBI,GAEnBH,GAAqB,MAcjB,2BACIW,KAAK,SACLf,UAAU,mEACVgB,YAAY,sBAEZC,SAAU,SAAAL,GAAC,OAAIJ,EAAgBU,SAASN,EAAEO,OAAOC,MAAO,QAE5D,2BACIL,KAAK,SACLf,UAAU,sCACVoB,MAAM,e,gBCyBPC,MA1Ef,SAAqBnB,GAAO,IAEjBoB,EAAmCpB,EAAnCoB,aAAcC,EAAqBrB,EAArBqB,kBAFE,EAKkBjB,mBAAS,IAL3B,mBAKjBkB,EALiB,KAKJC,EALI,OAMuBnB,mBAAS,IANhC,mBAMhBoB,EANgB,KAMDC,EANC,OAOOrB,oBAAS,GAPhB,mBAOhBG,EAPgB,KAOTC,EAPS,KAyCvB,OACI,kBAAC,WAAD,KACA,uBAAGV,UAAU,+BAAb,yBACA,0BACIW,SAnCa,SAAAC,GAIjB,GAHAA,EAAEC,iBAGCa,GAAiB,GAAKZ,MAAMY,IAAkC,KAAhBF,EAC7Cd,GAAa,OADjB,CAMA,IAAMkB,EAAQ,CACVJ,cACAE,gBACAG,GAAIC,IAAQC,YAKhBT,EAAaM,GAEbL,GAAkB,GAGlBb,GAAa,GAGbe,EAAmB,IACnBE,EAAqB,OAWhBlB,EAAQ,kBAAC,EAAD,CAAOV,QAAQ,kCAAoC,KAC5D,2BACIgB,KAAK,OACLf,UAAU,mEACVgB,YAAY,iBACZC,SAAU,SAAAL,GAAC,OAAIa,EAAoBb,EAAEO,OAAOC,QAC5CA,MAAOI,IAEX,2BACIT,KAAK,SACLf,UAAU,mEACVgB,YAAY,MACZC,SAAU,SAAAL,GAAC,OAAIe,EAAqBT,SAASN,EAAEO,OAAOC,MAAO,MAC7DA,MAAOM,IAEX,2BACIX,KAAK,SACLf,UAAU,sCACVoB,MAAM,eC1CPY,EA3BD,SAAC,GAAa,IAAZJ,EAAW,EAAXA,MAGhB,OAEA,yBAAK5B,UAAU,gBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,mBAAf,IACM4B,EAAMF,gBAGhB,yBAAK1B,UAAU,UACX,yBAAKA,UAAU,kBACV4B,EAAMJ,iBCCRS,MAdf,YAA4B,IAATC,EAAQ,EAARA,OACf,OACI,kBAAC,WAAD,KACM,uBAAGlC,UAAU,oCAAb,cACCkC,EAAOC,IAAI,SAAAP,GAAK,OACd,kBAAC,EAAD,CACGA,MAAOA,EACPQ,IAAKR,EAAMC,SCRlBQ,EAAqB,SAACC,EAAaC,GAa5C,OAVID,EAAY,EAAIC,EAER,qCACAD,EAAY,EAAKC,EAEjB,yCAGA,uCCEDC,EAXY,SAAC,GAAD,IAAEF,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAf,OACvB,kBAAC,WAAD,KACI,yBAAKvC,UAAU,6CAAf,uBACwBsC,GAExB,yBAAKtC,UAAWqC,EAAmBC,EAAaC,IAAhD,0BAC2BA,KC+DpBE,MAlEf,WAAe,MAI6BnC,mBAAS,GAJtC,mBAINgC,EAJM,KAIOnC,EAJP,OAMuBG,mBAAS,GANhC,mBAMNiC,EANM,KAMIlC,EANJ,OAOuCC,oBAAS,GAPhD,mBAONoC,EAPM,KAOetC,EAPf,OAU2BE,oBAAS,GAVpC,mBAUNqC,EAVM,KAUMpB,EAVN,OAYiBjB,mBAAS,IAZ1B,mBAYNsB,EAZM,KAYCN,EAZD,OAcmBhB,mBAAS,IAd5B,mBAcN4B,EAdM,KAcEU,EAdF,KAgCb,OAhBAC,oBAAU,WAER,GAAIF,EAAW,CACb,IAAMG,EAAa,sBAAOZ,GAAP,CAAeN,IAClCgB,EAAcE,GAGd,IAAMC,EAAsBR,EAAWX,EAAMF,cAC7CrB,EAAgB0C,GAEhBxB,GAAkB,KAGnB,CAACoB,EAAYT,EAAQN,EAAOW,IAI7B,yBAAKvC,UAAU,sBACb,wBAAIA,UAAU,uCAAd,iBACA,yBAAKA,UAAU,sCAEX0C,EACA,kBAAC,EAAD,CACEvC,mBAAoBA,EACpBC,qBAAsBA,EACtBC,gBAAiBA,IAGnB,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEiB,aAAcA,EACdC,kBAAmBA,IAErB,kBAAC,EAAD,CACEW,OAAQA,IAGV,kBAAC,EAAD,CACII,YAAaA,EACbC,SAAUA,QCzD1BS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1ae99dfe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) => (\r\n\r\n    <div className=\"text-center bg-rojo p-2 text-white my-4\" >{mensaje}</div>\r\n\r\n);\r\n\r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\n\r\nfunction Pregunta(props){\r\n\r\n    //destructuring de los props\r\n    const {guardarPresupuesto,  guardarPreguntaPresu, guardarRestante} = props;\r\n\r\n    //definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //validar Presupuesto\r\n\r\n    const agregarPresupuesto = (e) => {\r\n        e.preventDefault();\r\n\r\n        //validacion\r\n        if(cantidad <= 1 || isNaN(cantidad) ){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //pasa la validacion guardo el valor y cancelo los errores\r\n        guardarError(false);\r\n        //agregamos el presupuesto restante\r\n        guardarRestante(cantidad);\r\n        //agregamos el presupuesto\r\n        guardarPresupuesto(cantidad);\r\n        //se oculta la pregunta principal\r\n        guardarPreguntaPresu(false);\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n\r\n    <Fragment>\r\n        <p className=\"text-white lead text-center\">Ingresá tu Presupuesto</p>\r\n        {error ? <Error mensaje='El presupuesto es incorrecto'/> : null}\r\n        <form\r\n            onSubmit={agregarPresupuesto}\r\n        \r\n        >\r\n            <input \r\n                type=\"number\"\r\n                className=\"form-control bg-transparent border-dark mb-3 bg-oscuro rounded-0\"\r\n                placeholder=\"Agregar Presupuesto\"\r\n                //agrego el parse int para que sea numerico y cargo el valor en el hook\r\n                onChange={e => guardarCantidad(parseInt(e.target.value, 10))}\r\n            />\r\n            <input \r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-block rounded-0\"\r\n                value=\"ACEPTAR\"\r\n            />\r\n        </form>\r\n    </Fragment>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Pregunta;\r\n","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\n\r\nfunction Formulario (props){\r\n\r\n    const {guardarGasto, guardarCrearGasto} = props;\r\n\r\n    //state\r\n    const[nombreGasto, guardarNombreGasto] = useState('');\r\n    const [cantidadGasto, guardarCantidadGasto] = useState('');\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //agrego el gasto on sumbit\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        //validar datos del form\r\n        if(cantidadGasto <= 1 || isNaN(cantidadGasto) || nombreGasto === '' ){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //construir objeto de gasto\r\n        const gasto = {\r\n            nombreGasto,\r\n            cantidadGasto,\r\n            id: shortid.generate()\r\n\r\n        }\r\n\r\n        //enviarlo al componente principal\r\n        guardarGasto(gasto);\r\n        //valido que se creo un gasto\r\n        guardarCrearGasto(true);\r\n\r\n        //eliminar error\r\n        guardarError(false);\r\n\r\n        //resetear el form\r\n        guardarNombreGasto('');\r\n        guardarCantidadGasto('');\r\n\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <p className=\"text-white lead text-center\">Ingresá tus Gastos</p>\r\n        <form\r\n            onSubmit={agregarGasto}\r\n        \r\n        >\r\n            {error ? <Error mensaje='Ambos campos son obligatorios'/> : null}\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control bg-transparent border-dark mb-3 bg-oscuro rounded-0\"\r\n                placeholder=\"Ej. Transporte\"\r\n                onChange={e => guardarNombreGasto (e.target.value)}\r\n                value={nombreGasto}\r\n            />\r\n            <input \r\n                type=\"number\"\r\n                className=\"form-control bg-transparent border-dark mb-3 bg-oscuro rounded-0\"\r\n                placeholder=\"200\"\r\n                onChange={e => guardarCantidadGasto(parseInt(e.target.value, 10))}\r\n                value={cantidadGasto}\r\n            />\r\n            <input \r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-block rounded-0\"\r\n                value=\"AGREGAR\"\r\n            />\r\n        </form>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Gasto = ({gasto}) => {\r\n\r\n\r\nreturn(\r\n\r\n<div className=\" mb-4 shadow\">\r\n    <div className=\"row\">\r\n        <div className=\"col-2 text-white \">\r\n            <div className=\"bg-amarillo p-3\">\r\n                ${gasto.cantidadGasto}\r\n            </div>\r\n        </div>\r\n        <div className=\"col-10\">\r\n            <div className=\"text-white p-3\">\r\n                {gasto.nombreGasto}\r\n            </div>\r\n             \r\n        </div>\r\n        \r\n    </div>\r\n  \r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default Gasto;","import React, {Fragment} from 'react';\r\nimport Gasto from './Gasto';\r\n\r\nfunction Listado ({gastos}){\r\n    return(\r\n        <Fragment>\r\n              <p className=\"text-white lead text-center mt-4\">Tus Gastos</p>\r\n              {gastos.map(gasto =>(\r\n                 <Gasto\r\n                    gasto={gasto}\r\n                    key={gasto.id}\r\n                 />\r\n               ))}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listado;","//helpers para cambiar los estilos del presupuesto con JS\r\n\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n    //comprueba el porcentaje total y cambia la clase\r\n    if((presupuesto/4)> restante){\r\n        //tiene menos del 25% total\r\n        clase = 'bg-rojo text-center p-2 text-white';\r\n    } else if ((presupuesto/2) > restante){\r\n        //tiene menos de la mitad\r\n        clase = 'bg-amarillo text-center p-2 text-white';\r\n    } else{\r\n        //esta OK\r\n        clase = 'bg-verde text-center p-2 text-white';\r\n    }\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport {revisarPresupuesto} from '../Helpers';\r\n\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => (\r\n    <Fragment>\r\n        <div className=\"text-center p-2 bg-oscuro text-verde mt-4\">\r\n           Presupuesto total: ${presupuesto}\r\n        </div>\r\n        <div className={revisarPresupuesto(presupuesto, restante)}>\r\n           Presupuesto Restante: ${restante}\r\n        </div>\r\n    </Fragment>\r\n)\r\n\r\nexport default ControlPresupuesto;","import React, {useState, useEffect, Fragment} from 'react';\nimport Pregunta from './componentes/Pregunta';\nimport Formulario from './componentes/Formulario';\nimport Listado from './componentes/Listado';\nimport ControlPresupuesto from './componentes/ControlPresupuesto';\n\n\nfunction App() {\n\n  //state\n  //presupuesto total\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  //presupuesto restante\n  const [restante, guardarRestante] = useState(0);\n  const [preguntaPresupuesto, guardarPreguntaPresu] = useState(true);\n  //creo este state, para iniciar el listado siempre y cuando se cree un gasto\n  //eso lo envio al formulario para validarlo\n  const [crearGasto, guardarCrearGasto] = useState(false);\n  //este se envia al formulario para traer datos\n  const [gasto, guardarGasto] = useState({});\n  //se guardan los gastos a un array general\n  const [gastos, guardarGastos] = useState([]);\n\n  useEffect(()=>{\n    //valido si crear gasto es true\n    if (crearGasto){\n      const listadoGastos = [...gastos, gasto];\n      guardarGastos(listadoGastos);\n      //una vez que se agrega se pone como false\n      //restar presupesto\n      const presupuestoRestante = restante - gasto.cantidadGasto;\n      guardarRestante(presupuestoRestante);\n\n      guardarCrearGasto(false);\n    }\n    \n  }, [crearGasto, gastos, gasto, restante]); \n  //se pasa en la dependecia para que el effect sepa que tiene que esperar para ejecutarse\n\n  return (\n    <div className=\"App container py-5\">\n      <h1 className=\"text-amarillo display-4 text-center\">Gasto Semanal</h1>\n      <div className=\"p-4 border border-dark shadow my-4\">\n        \n        {(preguntaPresupuesto) ?\n          <Pregunta\n            guardarPresupuesto={guardarPresupuesto}\n            guardarPreguntaPresu={guardarPreguntaPresu}\n            guardarRestante={guardarRestante}\n          />\n        : (\n          <Fragment>\n            <Formulario\n              guardarGasto={guardarGasto}\n              guardarCrearGasto={guardarCrearGasto}\n            />\n            <Listado \n              gastos={gastos}\n            />\n            \n            <ControlPresupuesto\n                presupuesto={presupuesto}\n                restante={restante}\n            />\n          </Fragment>  \n        )\n        }\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}